--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.5) ~  Much Love, Ferib 

]]--

do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;local v16;while true do if (0==v0) then v1=tonumber;v2=string.byte;v3=string.char;v0=1;end if (v0==2) then v7=table.concat;v8=table.insert;v9=math.ldexp;v0=3;end if (v0==5) then v16=nil;v16=function(v22,v23,...)local v27=0;local v28;local v29;local v30;local v31;local v32;local v33;local v34;local v35;local v36;local v37;local v38;local v39;while true do if (v27==5) then v39=nil;v39=function(v40,v41,v42)local v48=0;local v49;local v50;local v51;while true do if (v48==0) then v49=v40[1];v50=v40[2];v48=1;end if (v48==1) then v51=v40[3];return function(...)local v85=1;local v86= -1;local v87={...};local v88=v13("#",...) -1 ;local function v89()local v93=v49;local v94=v50;local v95=v51;local v96=v37;local v97={};local v98={};local v99={};for v103=(1363 -675) -(325 + 363) ,v88 do if (((524 + 2744)==(4721 -1453)) and (v103>=v95)) then v97[v103-v95 ]=v87[v103 + 1 + 0 ];else v99[v103]=v87[v103 + (1999 -(53 + 1945)) ];end end local v100=(v88-v95) + 1 + 0 ;local v101;local v102;while true do local v104=660 -(587 + 73) ;local v105;while true do if ((((1906 + 2755) -(3797 -(149 + 1776)))<=4663) and (v104==0)) then v105=0 -0 ;while true do if ((v105==((0 -0) + 0)) or ((1260 + 1482)<=(178 + 272))) then local v126=0 -(0 + 0) ;while true do if ((v126==((0 + 0) -0)) or ((5093 -(122 + 103))<=(5621 -(303 + 960)))) then v101=v93[v85];v102=v101[1];v126=1 + 0 ;end if ((4423>(3712 -(1006 + 348))) and (v126==(544 -(241 + 302)))) then v105=2 -1 ;break;end end end if ((v105==(1 -0)) or ((4986 -(1023 + 62))<(2946 -(394 + 158)))) then if (((257 + 441)>=(1002 -(184 + 297))) and (v102<=(555 -(464 + 67)))) then if (((4161 -(1348 + 571))<(3393 -614)) and (v102<=(1111 -(835 + 265)))) then if (((4690 -(276 + (59 -29)))>(3198 -(661 + 713))) and (v102<=(1679 -((948 -(74 + 375)) + (2920 -(1551 + 194)))))) then if ((v102<=(3 -1)) or ((1144 + 3521)<(6809 -(21900 -16927)))) then if ((v102<=(0 + 0)) or ((4483 -(70 + 33 + 933))>3523)) then local v141=(0 + 0) -0 ;local v142;local v143;local v144;local v145;local v146;while true do if ((v141==(2 -1)) or (((3491 -(628 + 583)) + 80)>((20479 -(608 + 1075)) -(32782 -18781)))) then local v276=0 + 0 ;while true do if (((7246 -5137)<(1506 + 605)) and (v276==(0 -0))) then v144=nil;v145=nil;v276=1 + 0 ;end if (((4301 -2029)<(5052 -(150 + 674))) and (v276==1)) then v141=2;break;end end end if (((6358 -(2255 + 177))<=(19707 -15059)) and (v141==2)) then v146=nil;while true do if ((((1147 + 417) -((390 -101) + 153))>=(2228 -(664 + 522))) and ((1 + 1)==v142)) then for v317=v143,v86 do local v318=1005 -(781 + 224) ;while true do if ((v318==((1282 -756) -(32 + 494))) or ((4656 -(26 + 142))<=(11282 -6955))) then v146=v146 + (1 -0) ;v99[v317]=v144[v146];break;end end end break;end if (((9322 -5675)>=((2895 -1266) -1085)) and (v142==(375 -(373 + 2)))) then local v297=713 -(77 + 636) ;local v298;while true do if (((2467 + 2303)>(3145 -(753 + 903))) and (v297==(0 -0))) then v298=0 -0 ;while true do if (((0 -0)==v298) or ((5370 -(571 + 1176))<=3048)) then v143=v101[1654 -(1612 + 40) ];v144,v145=v96(v99[v143](v99[v143 + (1 -0) ]));v298=1 + 0 ;end if ((v298==(2 -1)) or (((3630 -(98 + 395)) -(746 + 796))>(1597 + 2521))) then v142=1 + 0 ;break;end end break;end end end if (((675 -455)>=(100 + 96)) and (((248 + 1355) -(576 + 1026))==v142)) then local v299=(62 + 556) -(550 + 68) ;local v300;while true do if (((12698 -10013)>(3430 -992)) and (v299==(0 + 0 + 0))) then v300=1735 -(646 + 1089) ;while true do if (((0 + 0)==v300) or ((12987 -9718)<=(6366 -3230))) then local v397=0 + 0 ;while true do if (((5673 -3324)<((8017 -(78 + 101)) -4985)) and (v397==(637 -((1006 -(483 + 450)) + 564)))) then v86=(v145 + v143) -(3 -2) ;v146=0 -0 ;v397=1 -0 ;end if (((77 -43)==(2 + 32)) and ((726 -(371 + 354))==v397)) then v300=975 -(298 + 676) ;break;end end end if ((((12121 -(218 + 541)) -8155)==(5144 -(1758 + 179))) and (v300==((937 -(446 + 490)) + 0))) then v142=2;break;end end break;end end end end break;end if (((3806 -(280 + 267))<(5997 -((3209 -2397) + 272))) and (v141==(0 -0))) then local v277=0 -0 ;while true do if ((v277==(1330 -(238 + 1092))) or ((1022 -458)==(5232 -(830 + 868)))) then v142=(479 -(419 + 60)) -0 ;v143=nil;v277=1 -0 ;end if (((426 -(106 + 291))<(8807 -4176)) and (v277==(1 + 0))) then v141=1 + 0 ;break;end end end end elseif ((v102>(1256 -(334 + 921))) or ((5792 -3611)<(56 + 1686))) then local v184=1860 -(852 + 1008) ;local v185;local v186;local v187;local v188;local v189;while true do if ((v184==(0 -0)) or ((2304 + 673)>(7055 -3275))) then local v293=0 + 0 ;while true do if (((980 -(92 + 89))<(3889 -(384 + 512))) and (v293==(1 + 0))) then v184=1 + 0 ;break;end if ((v293==(0 + 0)) or (((4227 + 2706) -4302)<=(3277 -1970))) then v185=1725 -((3667 -(1867 + 100)) + 25) ;v186=nil;v293=2 -1 ;end end end if ((((7030 -5133) -(89 + 1806))==v184) or (((15202 -(107 + 491)) -10606)<(1533 -(102 + 174)))) then v189=nil;while true do if (((4375 -(873 + 929))>=(404 + 1229)) and (v185==(1 + 0))) then local v320=(0 -0) -(0 + 0) ;local v321;while true do if (((304 -(64 + 240))==v320) or ((4966 -(1205 + (1868 -(681 + 816))))<=(16 + 85))) then v321=0 + 0 ;while true do if ((((686 + 468) -(1130 + 23))==v321) or ((9007 -5177)<=(4258 -(218 + 1306)))) then v185=1641 -(918 + 721) ;break;end if ((v321==(1393 -(132 + 1261))) or ((1739 + 1801)<(3426 -(1578 + 291)))) then local v426=1524 -(1004 + 520) ;while true do if (((1343 -(655 + 688))==v426) or ((4771 -1968)<=(3266 -1810))) then v86=(v188 + v186) -(1 + 0) ;v189=0 + 0 ;v426=3 -2 ;end if ((1==v426) or ((4178 -(908 + 143))==(3130 + 922))) then v321=1723 -(1600 + 122) ;break;end end end end break;end end end if (((2 + 0)==v185) or (3672==(378 + 641))) then for v345=v186,v86 do local v346=829 -(335 + 494) ;local v347;local v348;while true do if ((v346==(1 + 0 + 0)) or ((6 + 2 + 2657)<(9095 -6466))) then while true do if (((22093 -17207)>(552 -188)) and (v347==(0 -0))) then v348=(0 + 0) -0 ;while true do if ((v348==(809 -(148 + 661))) or ((5068 -2619)<((1410 + 2354) -1439))) then v189=v189 + (1 -0) + 0 ;v99[v345]=v187[v189];break;end end break;end end break;end if (((773 -(541 + 232))==v346) or ((5403 -3955)<(799 -452))) then v347=1515 -(1356 + 159) ;v348=nil;v346=1824 -(1695 + 128) ;end end end break;end if ((v185==((14 + 825) -(817 + 22))) or (((2676 + 954) -(219 + 1577))>=(1734 + (1221 -(340 + 697))))) then local v322=0 + 0 ;while true do if ((v322==(0 -0)) or ((7848 -4570)==(4007 -(25 + 10)))) then local v374=0 -0 ;while true do if (((879 + 269)<(477 + 2834)) and (v374==0)) then v186=v101[35 -(13 + 20) ];v187,v188=v96(v99[v186](v14(v99,v186 + (852 -(64 + 3 + 784)) ,v101[156 -(40 + 113) ])));v374=(1 -0) + 0 ;end if ((((2484 -870) + 169 + 1916)==(15416 -11717)) and (v374==(1 + 0))) then v322=1021 -(601 + 419) ;break;end end end if ((v322==(1 + 0)) or ((2309 -905)>=(4933 -(4 + 342)))) then v185=1 + 0 ;break;end end end end break;end if ((v184==(1 + 0)) or ((2318 + 589 + 550)==(15613 -11302))) then local v294=0 + 0 ;while true do if ((v294==(0 + 0)) or ((1018 -(29 + 532))>(1868 -552))) then v187=nil;v188=nil;v294=1 -0 ;end if (((804 + 624)>(999 -370)) and (v294==(782 -(271 + 510)))) then v184=6 -4 ;break;end end end end else local v190=696 -(476 + 220) ;local v191;while true do if ((v190==(0 + 0)) or ((1758 -(420 + 261))>=(5504 -(1633 + 83)))) then v191=v101[2 + 0 ];v99[v191](v14(v99,v191 + ((15 -11) -3) ,v101[493 -(254 + 236) ]));break;end end end elseif ((v102<=(5 -2)) or ((86 -50)>(890 + 2831))) then local v147=0 + 0 ;local v148;local v149;local v150;while true do if (((1321 -(248 + 84))<((1702 -(127 + 1086)) + 24 + 940)) and (v147==(1 + 0))) then v150=nil;while true do if ((v148==(0 + 0)) or ((3342 -(222 + 924))<=(1689 -(182 + 312)))) then local v301=0 -0 ;while true do if (((667 -366)<(3498 -(183 + 23))) and ((4 -3)==v301)) then v148=83 -(56 + 26) ;break;end if (((1562 -(430 + 1132))==v301) or ((1361 -(23 + 942))>=(12827 -(1267 + 6607)))) then v149=0 + 0 ;v150=nil;v301=1 + 0 ;end end end if ((4739>(8801 -(4393 + 1192))) and (v148==(245 -(126 + 118)))) then while true do if ((v149==(0 + 0)) or ((4506 -2956)<=(2064 -(1017 + 317)))) then v150=v101[526 -(521 + 3) ];v99[v150]=v99[v150](v14(v99,v150 + 1 + 0 ,v101[(1110 -(469 + 639)) + (1595 -(848 + 746)) ]));break;end end break;end end break;end if ((v147==(0 + 0)) or ((1809 -(18 + 1292))==(1957 + 2527))) then v148=(0 + 0) -0 ;v149=nil;v147=1;end end elseif (((2912 + 124)>852) and (v102>(3 + 1))) then local v192=422 -(229 + 193) ;local v193;local v194;local v195;local v196;while true do if ((((2399 -(512 + 126)) + 1431)>=(52 + 16)) and ((2 -1)==v192)) then v195=nil;v196=nil;v192=4 -2 ;end if ((v192==(157 -(23 + (253 -121)))) or ((9491 -4810)==(2822 -(15 + 222)))) then while true do if (((2875 -(119 + 763 + 392))<(2807 -997)) and (v193==(2 + (1509 -(1129 + 380))))) then if ((((16171 -11891) -2564)>417) and (v195>(0 -0))) then if (((17031 -13151)>=(5194 -3709)) and (v196<=v99[v194 + (3 -2) ])) then local v398=1525 -(627 + 898) ;local v399;while true do if (((9066 -6346)<(2096 + 872)) and (v398==(0 -0))) then v399=0 -(760 -(609 + 151)) ;while true do if (((1589 + 2496)>(2712 -(541 + 765))) and (v399==(0 + 0))) then v85=v101[162 -(153 + 6) ];v99[v194 + (47 -(36 + 8)) ]=v196;break;end end break;end end end elseif (((3143 -((95 -(69 + 17)) + 4))>=(1665 -(2084 -(703 + 655)))) and (v196>=v99[v194 + (811 -(327 + 430 + 53)) ])) then local v400=0 + 0 ;local v401;while true do if ((v400==((0 -0) -0)) or ((1516 + 3108)<(3849 -((189 -78) + 534)))) then v401=1617 -(637 + 803 + 177) ;while true do if ((v401==(0 + 0)) or ((5899 -(1246 + 664))<(1886 -(136 + 25)))) then v85=v101[425 -(61 + 361) ];v99[v194 + (3 -0) ]=v196;break;end end break;end end end break;end if ((((249 -(213 + 6)) -(12 + 5))<=(5455 -(2618 -1646))) and (v193==(0 -0))) then local v323=(3581 -1685) -(1061 + (1624 -789)) ;while true do if (((394 + 2320)<=(3505 -(23 + 16))) and (v323==(1 -0))) then v193=108 -(59 + 48) ;break;end if (((2542 + 1895)>(11 + 128)) and (v323==(0 + 0))) then v194=v101[879 -(259 + 618) ];v195=v99[v194 + (4 -2) ];v323=1 + 0 ;end end end if ((v193==(3 -2)) or (((8297 -3297) -(1066 + 301))<(611 + 185))) then local v324=1085 -(305 + 780) ;while true do if (((406 + 1238)<(4623 -2589)) and (v324==(1 + 0))) then v193=2 -0 ;break;end if ((v324==(0 + (1917 -(1305 + 612)))) or (1495<=(1797 -(371 + 32 + 135)))) then v196=v99[v194] + v195 ;v99[v194]=v196;v324=1 + 0 ;end end end end break;end if ((v192==(0 -0)) or ((6271 -3186)<(3377 -1525))) then v193=0 + 0 ;v194=nil;v192=1 + 0 ;end end else local v197=344 -(75 + 269) ;local v198;local v199;local v200;local v201;while true do if ((v197==(213 -(29 + 8 + 176))) or ((4087 -1509)<(632 + 211))) then v198=811 -(293 + 518) ;v199=nil;v197=1 + 0 ;end if (((1 + 0)==v197) or ((4433 -(227 + 1301))>=(10203 -6949))) then v200=nil;v201=nil;v197=2;end if (((843 + 604)==(5762 -4315)) and (v197==(1232 -(1087 + 143)))) then while true do if (((2846 -1678)==(2841 -((1695 -(41 + 258)) + 277))) and (v198==(1388 -(622 + 766)))) then local v325=0 + 0 ;while true do if (((915 + 512)<=2671) and (v325==(0 + 0))) then v199=v101[1 + 1 ];v200=v99[v199];v325=2 -1 ;end if ((v325==((1293 -(95 + 1197)) + 0)) or ((1077 + 2820)==(3664 -2006))) then v198=1 -0 ;break;end end end if (((3288 + 1381)>(11978 -9203)) and (v198==(1 -(0 + 0)))) then v201=v99[v199 + 1 + 1 ];if ((v201>(0 -0)) or ((8999 -6201)<(112 + 1076))) then if ((v200>v99[v199 + 1 + 0 ]) or ((119 + 254)>=(1701 + 191))) then v85=v101[(1056 -(557 + 496)) + 0 ];else v99[v199 + (225 -(126 + 96)) ]=v200;end elseif (((2115 + 2457)<=(6202 -(54 + 1403))) and (v200<v99[v199 + (1287 -(669 + 617)) ])) then v85=v101[(200 -(21 + 11)) -(58 + 107) ];else v99[v199 + 3 + 0 ]=v200;end break;end end break;end end end elseif ((v102<=(1281 -(775 + 498))) or ((867 -(63 + 175))<=(49 + (1403 -(534 + 402))))) then if ((v102<=(638 -(112 + 520))) or ((6345 -(174 + 1346))<(2522 -(297 + 817)))) then local v151=685 -(350 + 335) ;local v152;local v153;while true do if ((v151==(568 -(366 + 201))) or ((1609 + 1724)<=(349 + 363 + 1957))) then while true do if (((19716 -15524)>=(811 -(68 + 570))) and ((501 -(330 + 171))==v152)) then v153=v101[2 + 0 ];v99[v153]=v99[v153](v14(v99,v153 + (182 -(139 + 42)) ,v86));break;end end break;end if (((2541 -(331 + 389))==(1916 -(25 + 15 + 55))) and (v151==0)) then local v278=0 + 0 ;while true do if ((v278==(2 -1)) or ((3549 -(204 + 733))<((635 -475) + 80))) then v151=1 -0 ;break;end if (((1205 + 1541)<((8937 -3188) -(1153 + 201))) and (v278==(0 + 0))) then v152=0;v153=nil;v278=53 -(27 + 25) ;end end end end elseif (((1311 -731)<=((754 + 4457) -(1140 + 521))) and (v102>(2 + 5))) then if (((70 + 1362)<(11290 -8210)) and (v101[2 + 0 ]==v99[v101[1941 -(561 + 205 + 1171) ]])) then v85=v85 + (2 -1) ;else v85=v101[3 + 0 ];end else local v202=0 + 0 ;local v203;local v204;local v205;local v206;while true do if ((v202==((1852 -(34 + 1817)) + 0)) or (4515<(464 + (6492 -2717)))) then v205=nil;v206=nil;v202=6 -4 ;end if ((v202==(0 -(0 -0))) or ((781 + 91)>=(4315 -(749 + 1141)))) then v203=1017 -(258 + 230 + 529) ;v204=nil;v202=1457 -(958 + 498) ;end if (((3306 -(136 + (591 -(362 + 52))))<(5184 -((7835 -6209) + 57))) and (v202==((565 -(505 + 58)) + 0))) then while true do if (((14364 -(28320 -18728))>=(370 + (1831 -911))) and ((0 + (1629 -(1323 + 306)))==v203)) then local v327=0;while true do if (((1988 -((1521 -(19 + 2)) + 487))==v327) or ((3525 -(1442 + 42))>=(2513 + 1064))) then v203=2 -1 ;break;end if ((v327==(0 -0)) or ((105 + 3560)==(1118 -(207 + 306)))) then v204=v101[3 -1 ];v205={v99[v204](v14(v99,v204 + (3 -2) ,v86))};v327=447 -(204 + 242) ;end end end if ((v203==((73 + 348) -(356 + 64))) or ((3274 + 950 + 646)<=((20053 -15976) + 412))) then v206=0 -0 ;for v351=v204,v101[8 -4 ] do local v352=0 -0 ;while true do if (((1216 + 1146)==(3325 -(921 + 42))) and (v352==(0 + 0 + 0))) then v206=v206 + (1 -0) ;v99[v351]=v205[v206];break;end end end break;end end break;end end end elseif ((v102<=(841 -(390 + 442))) or ((493 -(180 + 39))>((5474 + 7751) -8232))) then local v154=0 + 0 ;local v155;local v156;local v157;while true do if ((v154==(2 -1)) or ((2706 -(284 + 1217))==(445 -247))) then v157=nil;while true do if ((130<=(2168 + 972)) and (v155==(0 -0))) then local v304=0 + 0 ;while true do if (((643 + 1327)>=(918 -(117 + 628))) and (v304==(1 + 0))) then v155=885 -(322 + 562) ;break;end if (((6091 -(1155 + 781))>=(422 + 2960)) and (v304==(0 -0))) then v156=v101[1 + 1 ];v157=v99[v156];v304=(2 -1) -0 ;end end end if ((v155==(1123 -(578 + 324 + 220))) or ((763 + 150)>(1970 -(387 + 115)))) then for v319=v156 + 1 + 0 ,v101[1138 -(1067 + 68) ] do v8(v157,v99[v319]);end break;end end break;end if ((v154==(0 + 0)) or ((3259 + 1474)==(103 + 58))) then v155=1566 -(515 + 1051) ;v156=nil;v154=(1 -0) + 0 ;end end elseif ((((1273 + 1614) -(218 + 959))<=(5666 -(142 + 1663))) and (v102>((56 -41) -5))) then v99[v101[1 + 1 ]][v99[v101[1546 -(1270 + 273) ]]]=v99[v101[3 + 1 ]];else local v209=0 + (172 -(74 + 98)) ;local v210;local v211;local v212;while true do if (((9773 -5995)==(4897 -(384 + 735))) and (v209==(976 -(583 + 393)))) then local v296=0 + 0 ;while true do if (((3181 -(390 + 1539))>=(1525 -(329 + 1040))) and (v296==(0 -0))) then v210=0 -0 ;v211=nil;v296=1 + 0 ;end if ((v296==(54 -(24 + 29))) or (((2327 -(723 + 178)) + 712 + 335)<=(1492 -762))) then v209=1 + 0 ;break;end end end if (((6607 -3076)>(2020 -((958 -662) + 457))) and (v209==(1 -0))) then v212=nil;while true do if (((5092 -2755)==(3881 -(1313 + 231))) and (v210==(0 -0))) then local v328=0 + 0 ;local v329;while true do if (((18928 -14576)==(1280 + 3072)) and (v328==(0 + (1158 -(558 + 600))))) then v329=0 + 0 ;while true do if ((v329==(370 -(353 + 16))) or ((2109 -1581)>=(6430 -2964))) then v210=1591 -(635 + 955) ;break;end if ((v329==(0 -0)) or ((2368 + 591)<=(2369 -543))) then v211=v101[2 + 1 + 0 ];v212=v99[v211];v329=262 -(196 + (1534 -(35 + 1434))) ;end end break;end end end if (((234 + 768)<=(2272 + 1081)) and (v210==(1065 -(383 + 681)))) then for v355=v211 + 1 + 0 ,v101[7 -3 ] do v212=v212   .. v99[v355] ;end v99[v101[2]]=v212;break;end end break;end end end elseif (((9130 -5709)>=(30 + 136)) and (v102<=(1779 -(923 + 839)))) then if (((24 -10)<(2506 -(561 + 1382))) and (v102<=(22 -8))) then if ((1584==((4377 -(386 + 879)) -1528)) and (v102<=((8 + 22) -18))) then local v158=0 -0 ;local v159;local v160;while true do if (((38 + 53 + 1580)>(292 + 1185)) and (v158==1)) then while true do if ((v159==(0 + 0 + 0 + 0)) or ((4852 -3387)>=(2921 -(83 + (2366 -1888))))) then v160=v101[2 + 0 ];v99[v160]=v99[v160]();break;end end break;end if ((v158==(0 + 0)) or ((4449 -(263 + (59 -40)))<(7009 -4375))) then v159=0 -0 ;v160=nil;v158=1235 -(802 + 432) ;end end elseif ((v102==(48 -35)) or ((161 + 2905)<(254 + 749))) then local v213=0 -0 ;local v214;local v215;local v216;local v217;local v218;while true do if ((((0 + 0) -0)==v213) or ((1683 -(85 + 352))==(571 + 98))) then v214=897 -(821 + 76) ;v215=nil;v213=2 -1 ;end if (((8397 -(22934 -18222))==(10124 -6439)) and (v213==(2 -1))) then v216=nil;v217=nil;v213=148 -(109 + 37) ;end if ((v213==(1326 -(851 + 473))) or (364<=(507 -316))) then v218=nil;while true do if ((v214==(0 + 0)) or ((162 + 213)==(3629 -(167 + 605 + 730)))) then v215=0 + 0 ;v216=nil;v214=1;end if (((3949 + 324)<=(2968 + 2018)) and (v214==(1 -0))) then local v331=(1715 -(1627 + 88)) + 0 ;while true do if (((11176 -6520)>(49 + 0)) and (v331==(0 -0))) then v217=nil;v218=nil;v331=(2043 -(692 + 67)) -(1160 + 123) ;end if ((v331==(1963 -(899 + 1063))) or ((718 + 176)>=(9767 -5084))) then v214=7 -5 ;break;end end end if ((v214==(5 -3)) or ((477 + 818)>=((3484 -2435) + 2990))) then while true do if (((2809 -1039)<=(3688 -(735 + 216))) and ((1 + 0)==v215)) then v218=644 -(103 + 541) ;for v408=v216,v101[1581 -(1306 + (660 -389)) ] do local v409=0 -0 ;while true do if ((v409==(1764 -(800 + 964))) or ((1763 + 3062)<=(4306 -(862 + 716)))) then v218=v218 + (3 -2) ;v99[v408]=v217[v218];break;end end end break;end if (((2877 + (7763 -5713))>(5526 -(849 + 960))) and (v215==(0 + 0))) then local v381=1155 -(665 + 490) ;local v382;while true do if (((6632 -(1617 + 128))>=((1304 + 9936) -7692)) and (v381==(642 -(395 + 247)))) then v382=1457 -(1177 + 280) ;while true do if (((2196 + 2576)==(2038 + 2734)) and (v382==((171 -(118 + 53)) + 0))) then local v438=0 + 0 ;while true do if ((v438==(1 + 0)) or ((1269 -653)>=(7987 -4037))) then v382=2 -1 ;break;end if (((19 + 901)<(4821 -(113 + 173))) and (v438==(701 -(139 + 562)))) then v216=v101[5 -3 ];v217={v99[v216](v99[v216 + (140 -(69 + (126 -56))) ])};v438=2 -1 ;end end end if ((4111>(2580 -(22 + 97))) and (v382==(1 + 0))) then v215=3 -2 ;break;end end break;end end end end break;end end break;end end else local v219=709 -(584 + 125) ;local v220;local v221;local v222;local v223;local v224;local v225;while true do if ((v219==(5 -2)) or ((3134 -(84 + 288))<=(323 + 997))) then while true do if ((((4141 + 683) -(68 + 34))>(2271 + 585)) and (v220==(483 -(143 + 339)))) then local v332=(1239 -(400 + 839)) -0 ;while true do if ((3671>=(1544 -1137)) and (v332==((1021 -(162 + 346)) -(262 + 251)))) then v223=v221 + 2 ;v224={v99[v221](v99[v221 + (3 -2) ],v99[v223])};v332=(391 -(146 + 244)) + 0 ;end if (((2 -1)==v332) or ((2695 + 826)<=(299 + 356 + 118))) then v220=2 + 0 ;break;end end end if (((2262 -(707 + 167))==1388) and (v220==(1998 -(410 + 1586)))) then local v333=666 -(29 + 637) ;while true do if (((1962 -(149 + 1156))<(9647 -5701)) and (((518 + 211) -(588 + 140))==v333)) then v220=2 + 1 ;break;end if ((v333==0) or ((2160 -((185 -84) + 782))>(4779 -(155 + 32)))) then for v410=1813 -(275 + 1537) ,v222 do v99[v223 + v410 ]=v224[v410];end v225=v224[1 + 0 ];v333=4 -3 ;end end end if (((10135 -6979)>=(3235 -(689 + 867))) and (v220==((256 -(90 + 166)) -0))) then local v334=0 + 0 ;while true do if ((2782<3034) and (0==v334)) then v221=v101[4 -2 ];v222=v101[2 + (6 -4) ];v334=2 -1 ;end if ((3984>(4056 -(50 + 422))) and (v334==(250 -(63 + 186)))) then v220=1 -0 ;break;end end end if ((v220==(1157 -(114 + 1040))) or ((2139 -(583 + (2114 -(506 + 699))))==(6282 -3882))) then if (v225 or ((3422 -(1931 + 22))>=(4753 -3107))) then local v365=1923 -(47 + 1876) ;local v366;local v367;while true do if (((593 -386)<(6712 -3965)) and ((476 -(358 + 117))==v365)) then while true do if ((v366==(0 + 0 + 0)) or ((4902 -(209 + 409))<=(1019 + (3171 -(134 + 124))))) then v367=0 + 0 ;while true do if (((2023 -(524 + (2133 -(664 + 516))))<(4792 -(1385 + 593))) and (v367==(459 -(6 + 453)))) then v99[v223]=v225;v85=v101[(1697 -1252) -(127 + 315) ];break;end end break;end end break;end if ((297<((10138 + 1909) -7731)) and (v365==((0 -0) + 0))) then v366=(1269 -(275 + 994)) + 0 ;v367=nil;v365=1 + 0 ;end end else v85=v85 + (4 -3) ;end break;end end break;end if (((4758 -3181)<=(6803 -4193)) and (v219==(1 + 0))) then v222=nil;v223=nil;v219=(970 + 209) -(1072 + 105) ;end if ((v219==(0 + 0)) or ((1780 + 2475)<((2741 -1252) + 1406))) then v220=(1755 -(106 + 641)) -(38 + 970) ;v221=nil;v219=1192 -(435 + 579 + 177) ;end if (((6 -4)==v219) or ((467 + 1385)>=3749)) then v224=nil;v225=nil;v219=4 -(130 -(81 + 48)) ;end end end elseif ((v102<=(12 + 3)) or ((4383 -(129 + 1709))>(2800 + 1566))) then v99[v101[1090 -(632 + 456) ]]= #v99[v101[2 + (3 -2) ]];elseif ((787<(5208 -(627 + (1240 -515)))) and (v102>((729 -(257 + 463)) + 7))) then v99[v101[(1153 -(547 + 601)) -3 ]]=v99[v101[3]] -v101[5 -1 ] ;else v99[v101[3 -1 ]]();end elseif ((v102<=(4 + 16)) or ((650 -(69 + 2))>=(13304 -9646))) then if ((v102<=(1107 -(1040 + 49))) or ((323 + 4410)<(5183 -2892))) then v99[v101[2]][v99[v101[2 + 1 ]]]=v101[807 -(458 + 220 + 125) ];elseif ((v102==(1109 -(786 + 304))) or ((7791 -3063)<=(1583 + 888))) then v99[v101[3 -1 ]]=v99[v101[(668 -(506 + 161)) + 2 ]] + v101[(2189 -656) -(324 + 1205) ] ;elseif (v99[v101[3 -1 ]] or ((27 + 1682)>(11049 -8225))) then v85=v85 + (2 -1) ;else v85=v101[3];end elseif (((183 + 323)<(17571 -12973)) and (v102<=(1386 -(1226 + 138)))) then if ((v102>(964 -(257 + 686))) or ((4501 -((2240 -1354) + 942))>=(4464 -(466 + 387)))) then local v228=1155 -(1087 + 68) ;local v229;local v230;while true do if ((v228==(0 -0)) or ((4193 -(1254 + 218))==(1268 -455))) then v229=327 -(281 + 46) ;v230=nil;v228=1 + 0 ;end if ((v228==(1319 -(947 + 371))) or ((5885 -(197 + 1479))<(3155 -(395 + 233)))) then while true do if ((v229==((99 -35) -(12 + 52))) or ((2975 -(392 + 216))<=(1683 -1151))) then v230=v101[5 -3 ];do return v99[v230](v14(v99,v230 + (1 -0) ,v101[(1231 -(274 + 953)) -(1 + 0) ]));end break;end end break;end end else local v231=0 -0 ;local v232;local v233;local v234;local v235;while true do if (((1568 -(587 + 187))>(217 + 414)) and (v231==(28 -(21 + 7)))) then v232=0 -0 ;v233=nil;v231=1 + 0 + 0 ;end if ((v231==((1976 -(867 + 1035)) -(56 + 16))) or (((1292 + 902) -(899 + (93 -73)))==(2053 + 1370))) then while true do if ((v232==(5 -3)) or ((15274 -(10642 + 1151))<=(3889 -(407 + 293)))) then for v356=1 + (0 -0) ,v101[5 -(1990 -(1175 + 814)) ] do local v357=0 + 0 ;local v358;local v359;while true do if ((v357==(1236 -((2257 -(848 + 199)) + 26))) or ((9998 -5300)<=(3123 -2123))) then v358=0 + 0 ;v359=nil;v357=(3 -2) + 0 ;end if ((v357==(1 + 0)) or ((1807 + 2301)<(3090 -(6656 -5266)))) then while true do if (((1 + 0)==v358) or ((1173 -(96 + 222))>=(4968 -(536 + 1221)))) then if ((((23054 -15869) -3642)>=(829 + 149)) and (v359[250 -(19 + (997 -767)) ]==(105 -(6 + 76)))) then v235[v356-(2 -1) ]={v99,v359[(987 -(826 + 155)) -3 ]};else v235[v356-(394 -(52 + 341)) ]={v41,v359[1720 -(611 + 1106) ]};end v98[ #v98 + 1 ]=v235;break;end if (((8108 -6002)<(3754 + 619)) and ((0 + 0)==v358)) then v85=v85 + (2 -1) ;v359=v93[v85];v358=1 + 0 ;end end break;end end end v99[v101[5 -3 ]]=v39(v233,v234,v42);break;end if ((v232==(2 -1)) or (((4284 -2765) + 102 + 1988)<(4833 -(1738 + 1884)))) then local v337=0 -(0 -0) ;while true do if ((v337==(1 + (597 -(30 + 567)))) or ((3025 + 430)==(7381 -5867))) then v232=4 -2 ;break;end if ((((4281 + 13537) -12919)==(2797 + 2102)) and (((2014 -(4 + 801)) -(474 + 735))==v337)) then v235={};v234=v11({},{__index=function(v386,v387)local v413=0 + 0 ;local v414;while true do if ((v413==0) or ((3190 + 1796)==(614 + 591))) then local v434=675 -(579 + 96) ;while true do if ((v434==(0 -0)) or ((5905 -(276 + 1309))>=(6398 -2020))) then v414=v235[v387];return v414[(451 -(35 + 415)) + 0 ][v414[937 -(896 + 39) ]];end end end end end,__newindex=function(v386,v387,v388)local v415=0 + 0 ;local v416;local v417;while true do if ((((3221 -(37 + 701)) -1748)<=(12068 -8021)) and (v415==(2 -1))) then while true do if ((v416==(0 + 0)) or ((851 + (4530 -(33 + 806)))<((10369 -7291) + (962 -268)))) then v417=v235[v387];v417[1330 -(114 + 1215) ][v417[1227 -(8 + 1217) ]]=v388;break;end end break;end if ((v415==(909 -(677 + 232))) or (((9611 -6870) + 1637)>((12940 -(309 + 1079)) -6770))) then v416=996 -(990 + 6) ;v417=nil;v415=1 + 0 ;end end end});v337=1;end end end if (((9925 -(2436 + 5388))>=(680 + 671)) and ((0 -0)==v232)) then local v338=0 -0 ;while true do if (((6652 -4002)<(5407 -(245 + 1603))) and (v338==(1 + 0))) then v232=1 + 0 + 0 ;break;end if (((1317 -829)<(1637 -(690 + 357))) and (v338==((0 -0) + 0))) then v233=v94[v101[3 -0 ]];v234=nil;v338=2 -(630 -(4 + 625)) ;end end end end break;end if ((v231==(244 -(89 + 154))) or ((6126 -(313 + 877))<=(4042 -(310 + 251)))) then v234=nil;v235=nil;v231=169 -(68 + 48 + 51) ;end end end elseif (((393 + 548)<=((1124 -(51 + 174)) + 460)) and (v102>(1467 -(1027 + 417)))) then v99[v101[1417 -(649 + 766) ]][v101[1304 -(606 + 695) ]]=v101[7 -3 ];else v99[v101[492 -(121 + 369) ]]=v99[v101[3 -0 ]];end elseif (((61 + 249)==(437 -127)) and (v102<=(108 -71))) then if ((v102<=(50 -20)) or ((5128 -(92 + 268))==(214 + 2242))) then if (((880 + 1092)>=(1040 -735)) and (v102<=(680 -(192 + 461)))) then if ((v102<=(124 -99)) or (4575<(18663 -14299))) then local v164=1215 -(453 + 762) ;local v165;local v166;local v167;while true do if ((v164==(1106 -(234 + 871))) or ((2546 -(166 + 352 + 291))>=(4674 -1754))) then v167=nil;while true do if ((v165==(0 -0)) or (((7740 + 4127) -7130)<(4747 -(690 + 836)))) then v166=v101[1 + 1 ];v167=v99[v101[1651 -(1643 + 5) ]];v165=377 -(80 + 296) ;end if ((v165==(2 -1)) or ((3332 -1707)>=(5385 -1456))) then v99[v166 + 1 + 0 ]=v167;v99[v166]=v167[v101[1050 -((2633 -(923 + 772)) + 108) ]];break;end end break;end if ((v164==(1080 -(560 + 520))) or ((706 -((1478 -(801 + 530)) + 88))>=(543 + (5674 -(1461 + 248))))) then v165=0 + 0 ;v166=nil;v164=2 -1 ;end end elseif (((4675 -(14 + 29))>(3363 -(1033 + 599))) and (v102==26)) then v99[v101[2 + 0 ]]=v101[1 + 2 ] + v99[v101[7 -3 ]] ;elseif ((v99[v101[2 + 0 ]]==v99[v101[4 + 0 ]]) or ((2407 + 582 + 510)<(2075 + 438))) then v85=v85 + (935 -(508 + 426)) ;else v85=v101[2 + 1 + 0 ];end elseif ((282<((9639 -2318) -3718)) and (v102<=(1217 -(323 + 866)))) then local v168=1200 -(84 + 1116) ;local v169;local v170;while true do if (((13 -3)<(328 + 845)) and (v168==((517 -(500 + 17)) + 0))) then v169=0 + 0 ;v170=nil;v168=1 + 0 + 0 ;end if (((170 + 346)<(2867 + 382)) and ((409 -(59 + 349))==v168)) then while true do if ((v169==(1634 -(1095 + 539))) or ((21017 -16159)<((611 + 2755) -((635 -(6 + 10)) + 39)))) then v170=v101[254 -(231 + 21) ];v99[v170]=v99[v170](v99[v170 + (3 -2) ]);break;end end break;end end elseif ((v102>(710 -(13 + 668))) or (((40 + 3703) -(19 + 399))>(9758 -5002))) then if ( not v99[v101[953 -(555 + 396) ]] or ((19 + 74)>=(13339 -9355))) then v85=v85 + 1 + 0 ;else v85=v101[6 -3 ];end else do return;end end elseif ((((5513 -(537 + 27)) -(978 + 517))==(8664 -5210)) and (v102<=(24 + 9))) then if (((4766 -2039)<=((1410 + 2837) -(301 + 9))) and (v102<=(63 -32))) then v99[v101[7 -5 ]]=v99[v101[3 + 0 ]][v99[v101[4]]];elseif (((737 + 2725)<(6044 -(587 + 817))) and (v102>32)) then v99[v101[1426 -(381 + 655 + 388) ]]=v39(v94[v101[1 + 2 ]],nil,v42);else v99[v101[8 -6 ]]=v99[v101[3]]%v99[v101[3 + 1 ]] ;end elseif (((394 + 1776)<=(504 + 1849)) and (v102<=((8545 -6657) -(1395 + 458)))) then if ((v102>(162 -(40 + 88))) or ((13032 -10016)<(4432 -3401))) then v99[v101[886 -(710 + 174) ]]=v101[3]~=(0 -0) ;else v99[v101[1 + 1 ]]=v41[v101[2 + 1 ]];end elseif ((v102>36) or ((2484 -(1207 + 563))>((2909 -(335 + 177)) -1164))) then local v246=0 + (1689 -(1327 + 362)) ;local v247;local v248;local v249;local v250;while true do if (((4027 + 197)>((2364 -(809 + 1006)) -((416 -250) + (174 -77)))) and (v246==(1 + 0))) then v249=nil;v250=nil;v246=741 -(354 + 385) ;end if ((v246==(5 -3)) or ((1022 + 1607 + 104)<=(8277 -6264))) then while true do if (((821 -469)<=(4791 -(949 + 33))) and (v247==((19 + 981) -(709 + 290)))) then v250=nil;while true do if (((2413 + 2384)>=(17485 -13505)) and (v248==(0 -0))) then local v390=0 -0 ;local v391;while true do if ((v390==(1566 -((987 -(75 + 12)) + 666))) or (((5655 -2564) + 460)>=(8453 -4050))) then v391=0 -0 ;while true do if ((v391==(1 -0)) or ((1311 + 326)>=(3373 -1474))) then v248=1;break;end if ((v391==(1918 -(507 + 471 + 940))) or ((4248 -(423 + 109))>=(4913 -(35 + 36)))) then local v441=(431 + 1325) -(310 + 1446) ;while true do if ((v441==(0 -0)) or (((3444 -(1446 + 334)) -306)>(1915 + 1136))) then v249=v101[5 -3 ];v250={};v441=1 + 0 ;end if (((6358 -(9 + 1599))>=(3105 -(517 + 672))) and (v441==(2 -1))) then v391=1 + 0 ;break;end end end end break;end end end if ((v248==(2 -1)) or ((2161 + 1844)<=(727 + (4756 -(144 + 1800))))) then for v418=1 + 0 , #v98 do local v419=0 -0 ;local v420;local v421;local v422;while true do if (((1456 -(53 + 60 + 233))>=(1430 -(797 + 422))) and (v419==((0 -0) -0))) then v420=(1238 -(300 + 479)) -(124 + 335) ;v421=nil;v419=1 + 0 ;end if ((v419==(3 -2)) or ((1510 -(368 + 103))<(32 + 48))) then v422=nil;while true do if (((387 + (298 -217))<(1356 -(1901 -(473 + 649)))) and (v420==(1 + 0 + 0))) then while true do if (((8238 -3870)==(14292 -9924)) and (v421==(0 + 0))) then v422=v98[v418];for v465=0 + 0 , #v422 do local v466=0 + 0 ;local v467;local v468;local v469;local v470;while true do if ((2075<((7252 + 119) -4168)) and ((0 + 0)==v466)) then v467=0 -0 ;v468=nil;v466=(4 -3) + 0 ;end if ((v466==(503 -(87 + 414))) or ((47 -26)>(12 + 84))) then while true do if (((3454 -(23 + 311))==(9676 -6556)) and (v467==(1184 -(687 + 496)))) then v470=v468[3 -1 ];if (((v469==v99) and (v470>=v249)) or (((1453 -(738 + 596)) -(48 + 7))>(2439 -((940 -243) + 250)))) then local v473=0 -0 ;local v474;while true do if (((0 + 0)==v473) or ((927 + (5364 -3482))>=(1853 + 1926))) then v474=0 + 0 ;while true do if (((0 -0)==v474) or ((3339 -(46 + 812))>=(2413 + 113))) then v250[v470]=v469[v470];v468[3 -2 ]=v250;break;end end break;end end end break;end if (((358 + 601)<=(370 + 1591)) and (v467==(0 -0))) then local v472=0 + 0 ;while true do if (((173 -75)==(369 -271)) and (v472==(2 -1))) then v467=1;break;end if ((v472==(1337 -(856 + 481))) or ((1263 -(211 + 22))<(2876 -(1894 + 96)))) then v468=v422[v465];v469=v468[2 -1 ];v472=1681 -(1509 + 171) ;end end end end break;end if ((v466==(858 -(614 + (406 -163)))) or ((1129 -464)>=(2064 + 1696))) then v469=nil;v470=nil;v466=119 -(111 + 6) ;end end end break;end end break;end if ((v420==(0 -0)) or ((1998 -(900 + (2253 -(837 + 461))))>(4090 -1637))) then local v453=90 -(81 + 9) ;while true do if ((v453==(1175 -(13 + 1161))) or (((1820 + 50) -(8 + 13))<=(410 + 219))) then v420=1 + 0 ;break;end if ((v453==(1358 -(701 + 657))) or ((1740 + 2121)<=3253)) then v421=0 + 0 + 0 ;v422=nil;v453=525 -(521 + 3) ;end end end end break;end end end break;end end break;end if (((222 + 44)<=(29 + 3752)) and (((0 -0) -(0 + 0))==v247)) then local v339=1129 -(544 + 585) ;while true do if ((v339==(0 + 0)) or ((103 + 158)<(366 -(69 + 13 + 60)))) then v248=0 -0 ;v249=nil;v339=1297 -(264 + 1032) ;end if ((v339==1) or (4210<=(6050 -3174))) then v247=19 -(15 + 3) ;break;end end end end break;end if (((7122 -4899)==((3243 -(580 + 145)) -(200 + 95))) and ((0 + 0)==v246)) then v247=0 + 0 ;v248=nil;v246=1215 -(1185 + 29) ;end end else v99[v101[3 -1 ]]={};end elseif (((1461 + 3492)==(5534 -(162 + 419))) and (v102<=((87 + 309) -(25 + 328)))) then if ((((9708 + 7465) -12771)>=(4805 -3493)) and (v102<=((1724 -(399 + 1287)) + 2))) then if ((v102<=38) or ((3414 -944)<=(1765 -(901 + 379)))) then local v173=543 -(421 + 122) ;local v174;local v175;while true do if (((744 -(1068 -(321 + 190)))<=(2588 -1830)) and (v173==((1532 -(48 + 1483)) + 0))) then while true do if (((4148 -2945)<=(7583 -4714)) and (v174==(1868 -(750 + 1118)))) then v175=v101[774 -((991 -(306 + 678)) + 765) ];v99[v175](v14(v99,v175 + 1 + 0 ,v86));break;end end break;end if ((((6032 -4761) + 1607)==(922 + 1956)) and (v173==(0 + 0))) then v174=1972 -(1053 + 919) ;v175=nil;v173=2 -1 ;end end elseif (((7950 -5294)==(7869 -5213)) and (v102>(56 -17))) then v99[v101[859 -(40 + 817) ]]=v99[v101[3 + (0 -0) ]]%v101[1476 -(494 + 978) ] ;else v85=v101[6 -3 ];end elseif (((903 -(90 + 330))<=(3523 -(12 + 28))) and (v102<=(1180 -((1174 -(482 + 36)) + 483)))) then if ((v99[v101[4 -2 ]]==v101[1 + 3 ]) or ((5625 -1762)<=(2330 -1603))) then v85=v85 + (2 -1) + 0 ;else v85=v101[346 -(324 + 19) ];end elseif (((11252 -6962)==(6992 -(3178 -(343 + 133)))) and (v102>(151 -109))) then v99[v101[(74 -(10 + 63)) + (1200 -(260 + 939)) ]]=v101[7 -4 ];else local v257=1011 -(764 + (2074 -(1361 + 466))) ;local v258;local v259;while true do if ((v257==(0 -0)) or ((6502 -3151)>4364)) then v258=1313 -(573 + 740) ;v259=nil;v257=1 -0 ;end if (((2621 -(285 + (2160 -(526 + 587))))<(5109 -(1288 + 326))) and (v257==(1 + 0))) then while true do if (((1547 + 492)<=(3207 + 303 + 1232)) and ((0 + 0)==v258)) then v259=v101[424 -(306 + 112 + 4) ];v99[v259](v99[v259 + (3 -2) ]);break;end end break;end end end elseif (((5527 -(1108 + 600))>=(9171 -6539)) and (v102<=(538 -(471 + 21)))) then if (((8470 -4458)==((10799 -(892 + 39)) -5856)) and (v102<=(9 + 5 + 30))) then local v176=354 -(287 + (1149 -(71 + 1011))) ;local v177;local v178;local v179;local v180;local v181;while true do if ((v176==(0 -0)) or ((2132 + 638)>=(4376 -(5051 -3549)))) then v177=0 + 0 ;v178=nil;v176=(2546 -(144 + 827)) -(1298 + 276) ;end if (((13807 -8813)>(777 + 1232)) and (v176==(138 -(43 + 93)))) then v181=nil;while true do if (((1766 -(1122 + 643))==v177) or ((215 + 195)>((4299 -(326 + 1105)) -((1937 -(316 + 436)) + 799)))) then v180=nil;v181=nil;v177=1830 -(121 + (4001 -2294)) ;end if ((v177==(7 -5)) or (((7635 -(524 + 321)) -2767)>=(14898 -10267))) then while true do if ((v178==(1814 -(242 + 1571))) or ((3746 -(256 + 1456))>=(2709 + 822))) then v181=v101[1337 -(957 + 377) ];for v368=1 + 0 ,v181 do v180[v368]=v99[v179 + v368 ];end break;end if ((v178==(1475 -(19 + 1456))) or ((4774 -(60 + 60))<=(2616 + 1108))) then local v361=0 -0 ;local v362;while true do if (((165 + 624)<(1824 + 873)) and ((0 + 0)==v361)) then v362=0 + 0 ;while true do if (((9884 -6947)<(1851 + 1680)) and (v362==0)) then local v435=(4 + 663) -(420 + (744 -497)) ;while true do if (((1007 + 2673)>=(974 -(300 + 303))) and (v435==(0 + 0))) then v179=v101[1981 -(1425 + 554) ];v180=v99[v179];v435=2 -1 ;end if (((820 + 513)<=(2641 + 312)) and (v435==(1 + 0))) then v362=(1522 -(864 + 407)) -(157 + 93) ;break;end end end if (((224 + 1247)<(8139 -3919)) and ((1 + 0 + 0)==v362)) then v178=902 -(718 + 183) ;break;end end break;end end end end break;end if ((v177==((0 -0) -0)) or ((2635 -(959 + 27))<=(239 + 912))) then local v315=82 -(24 + 58) ;while true do if ((v315==(3 -2)) or ((1452 + 260 + 601)==((6637 -(566 + 7)) -2113))) then v177=(1392 -(122 + 1269)) + 0 ;break;end if (((0 -0)==v315) or ((4532 + 361)==(4586 -2488))) then v178=0 -0 ;v179=nil;v315=1 + 0 ;end end end end break;end if ((v176==(1 + 0)) or ((615 + 1656)>=3282)) then v179=nil;v180=nil;v176=2 -0 ;end end elseif (((805 + 63)<(3994 + 334)) and (v102==(125 -80))) then local v260=0 -0 ;local v261;local v262;local v263;local v264;local v265;local v266;while true do if (((937 -600)<(5264 -3233)) and (v260==(1 + (0 -0)))) then v263=nil;v264=nil;v260=224 -(169 + 53) ;end if (((865 + 719)>=(552 -(119 + 377))) and (v260==((4794 -2999) -(1010 + 785)))) then v261=0 -0 ;v262=nil;v260=(795 -(595 + 198)) -1 ;end if (((1534 + 2095)>=(5282 -2935)) and (v260==(2 + 1))) then while true do if (((39 + 2366)<(5032 -(724 + 687))) and (v261==(0 -0))) then local v341=0 + 0 ;while true do if ((v341==(233 -(38 + 195))) or ((6041 -(706 + 424))<=(2979 + 1022))) then v262=0 -0 ;v263=nil;v341=1 + 0 + 0 ;end if ((v341==(3 -(1 + 1))) or ((237 + 201)>(1250 -(325 + (866 -(140 + 475)))))) then v261=1 -0 ;break;end end end if ((v261==(256 -(160 + 95))) or (((5473 -(796 + 888)) -(1646 + 153))>=(4066 -(107 + 989)))) then local v342=0 -0 ;while true do if ((v342==(349 -(8 + 340))) or ((4892 -(19 + 3))==((1527 -1061) + 2821))) then v261=1 + 1 ;break;end if (((721 + 1088)>=(1231 -(295 + (1254 -589)))) and (v342==(0 + 0 + 0))) then v264=nil;v265=nil;v342=157 -(140 + 16) ;end end end if (((2927 -(216 + 463))==(4328 -2080)) and ((1 + 1)==v261)) then v266=nil;while true do if (((14091 -9414)>=(8384 -5426)) and (v262==(1448 -(301 + 1147)))) then local v392=0 + 0 ;local v393;while true do if ((v392==0) or ((5648 -(753 + 171))==(2163 + 416))) then v393=685 -(586 + 99) ;while true do if (((12061 -8435)>=(703 + 239)) and (v393==(0 + 0 + 0))) then v263=v101[2 + 0 ];v264,v265=v96(v99[v263](v14(v99,v263 + ((3636 -2364) -(885 + 386)) ,v86)));v393=1 + 0 ;end if ((v393==1) or ((337 -(135 + 49))>(1932 -1175))) then v262=2 -1 ;break;end end break;end end end if (((1849 -(646 + 1202))==v262) or ((728 + 4075)==(1848 -(223 + 157)))) then local v394=0 + 0 ;local v395;while true do if ((v394==(0 + 0)) or ((564 + 553)>(6282 -(2125 + 258)))) then v395=277 -(259 + (1652 -(955 + 679))) ;while true do if (((1855 + 975)==(13692 -10862)) and (v395==(1 -(0 -0)))) then v262=269 -(48 + 165 + 54) ;break;end if (((541 + 1287 + 3072)>(2380 -(147 + 273))) and (v395==(0 + 0))) then local v443=0 -0 ;while true do if ((v443==0) or ((2207 + 227)<(2539 -((64 -47) + 794)))) then v86=(v265 + v263) -(1 + 0) ;v266=0 -0 ;v443=1966 -(627 + 1338) ;end if (((398 + (408 -(127 + 67)))<(5094 -(9 + 146))) and (v443==(1 + 0))) then v395=1 -(0 -0) ;break;end end end end break;end end end if ((v262==(1 + 1)) or ((361 + 658)==(3256 -(2140 -930)))) then for v423=v263,v86 do local v424=0 + 0 ;local v425;while true do if (((66 + 469)<=(1387 -(18 + 3))) and (v424==(0 -0))) then v425=(984 -(749 + 235)) + 0 ;while true do if ((v425==(0 -0)) or ((125 + (1969 -(784 + 313)))<=(147 -88))) then v266=v266 + (680 -(637 + 42)) ;v99[v423]=v264[v266];break;end end break;end end end break;end end break;end end break;end if ((v260==2) or ((17685 -13757)<=(2863 + 80 + 145))) then v265=nil;v266=nil;v260=1 + 2 ;end end else v99[v101[(973 -(197 + 774)) + 0 ]][v101[3 + 0 ]]=v99[v101[5 -1 ]];end elseif (((4008 -2929)<(193 + 3501)) and (v102<=(763 -(193 + 522)))) then if ((v102==(41 + 6)) or ((7852 -5032)<=(5523 -(2282 + 1328)))) then local v269=712 -(127 + 585) ;local v270;local v271;while true do if ((v269==(0 + 0)) or ((4483 -(82 + 169))<=(976 + 768))) then v270=0 -(1635 -(345 + 1290)) ;v271=nil;v269=1040 -((1336 -307) + 10) ;end if ((v269==(1 -0)) or ((4879 -1379)<=(4994 -(144 + 1623)))) then while true do if (((277 -(44 + (56 -37)))<(42 + 3857)) and (v270==(1782 -(1234 + 548)))) then v271=v101[2];do return v14(v99,v271,v86);end break;end end break;end end else for v279=v101[7 -5 ],v101[4 -1 ] do v99[v279]=nil;end end elseif (((642 + 1434)<(1767 + 1740)) and (v102==(1250 -(364 + 837)))) then v99[v101[(1188 -(442 + 744)) + 0 ]]=v42[v101[1293 -(443 + 847) ]];else v99[v101[1865 -(201 + 1662) ]]=v99[v101[217 -(174 + 40) ]][v101[3 + 1 ]];end v85=v85 + 1 + 0 ;break;end end break;end end end end A,B=v37(v12(v89));if  not A[1] then local v106=v40[4][v85] or "?" ;error("Script error at ["   .. v106   .. "]:"   .. A[2] );else return v14(A,2,B);end end;end end end;return v39(v38(),{},v23)(...);end if (v27==2) then v32=function()local v52,v53=v2(v22,v28,v28 + 1 + 1 );v28=v28 + (3 -1) ;return (v53 * (1682 -(669 + 757))) + v52 ;end;v33=nil;v33=function()local v54,v55,v56,v57=v2(v22,v28,v28 + 2 + (4 -3) );v28=v28 + 1 + 3 ;return (v57 * (16777906 -(594 + 96))) + (v56 * (208052 -142516)) + (v55 * (112 + 144)) + v54 ;end;v34=nil;v27=3;end if (v27==0) then v28=1;v29=nil;v22=v5(v4(v22,5),"..",function(v43)if (v2(v43,2)==79) then local v78=0;while true do if (v78==0) then v29=v1(v4(v43,1,1));return "";end end else local v79=v3(v1(v43,16));if v29 then local v90=0;local v91;while true do if (0==v90) then v91=v6(v79,v29);v29=nil;v90=1;end if (v90==1) then return v91;end end else return v79;end end end);v30=nil;v27=1;end if (v27==4) then v37=nil;v37=function(...)return {...},v13("#",...);end;v38=nil;v38=function()local v58=1835 -(681 + 1154) ;local v59;local v60;local v61;local v62;local v63;local v64;local v65;local v66;while true do if (v58==(808 -(726 + 79))) then v65=nil;v66=nil;v58=6 -2 ;end if (v58==1) then v61=nil;v62=nil;v58=4 -2 ;end if (v58==(11 -7)) then while true do if (v59==2) then local v107=0;while true do if (v107~=1) then else v59=12 -9 ;break;end if (v107~=(0 + 0)) then else v64=nil;v65=nil;v107=1 + 0 ;end end end if (v59~=(1 + 0)) then else v62=nil;v63=nil;v59=4 -2 ;end if (v59==0) then v60=0;v61=nil;v59=1 -0 ;end if (v59==3) then v66=nil;while true do if ((406 -(46 + 359))~=v60) then else v65=v33();v66={};for v113=126 -(81 + 44) ,v65 do local v114=1408 -(319 + 1089) ;local v115;local v116;local v117;while true do if ((1370 -(540 + 830))==v114) then local v127=0;while true do if (v127==0) then v115=0 -0 ;v116=nil;v127=1040 -(789 + 250) ;end if (v127~=(1985 -(1906 + 78))) then else v114=1728 -(1528 + 199) ;break;end end end if (v114==1) then v117=nil;while true do if (v115==1) then if (v116==1) then v117=v31()~=0 ;elseif (v116==2) then v117=v34();elseif (v116~=(7 -4)) then else v117=v35();end v66[v113]=v117;break;end if (v115==(487 -(232 + 255))) then local v132=0;while true do if (v132~=0) then else v116=v31();v117=nil;v132=1;end if (v132~=1) then else v115=1;break;end end end end break;end end end v64[1 + 2 ]=v31();v60=2;end if (v60==(0 -0)) then v61={};v62={};v63={};v64={v61,v62,nil,v63};v60=1 + 0 ;end if (v60==(7 -5)) then for v118=1,v33() do local v119=0;local v120;local v121;while true do if (v119~=1) then else while true do if (v120~=(724 -(110 + 614))) then else v121=v31();if (v30(v121,1,1)==0) then local v133=0 -0 ;local v134;local v135;local v136;while true do if (v133==(2 + 0)) then local v137=0;while true do if (v137~=(3 -2)) then else v133=3;break;end if (v137~=(0 + 0)) then else if (v30(v135,1,1 -0 )==(3 -2)) then v136[2]=v66[v136[2]];end if (v30(v135,2,2 -0 )==(1697 -(1195 + 501))) then v136[3]=v66[v136[3]];end v137=1 + 0 ;end end end if (v133==(76 -(15 + 60))) then local v138=0;while true do if (v138~=(0 -0)) then else v136={v32(),v32(),nil,nil};if (v134==(653 -(474 + 179))) then local v289=956 -(6 + 950) ;local v290;local v291;local v292;while true do if (v289==(1046 -(830 + 215))) then v292=nil;while true do if (v290==(1 -0)) then while true do if (0==v291) then v292=0 -0 ;while true do if (v292==0) then v136[3]=v32();v136[8 -4 ]=v32();break;end end break;end end break;end if (v290~=(0 + 0)) then else v291=0 -0 ;v292=nil;v290=1;end end break;end if (v289~=(0 -0)) then else v290=735 -(732 + 3) ;v291=nil;v289=1;end end elseif (v134==(2 -1)) then v136[2 + 1 ]=v33();elseif (v134==(3 -1)) then v136[1719 -(70 + 1646) ]=v33() -(2^16) ;elseif (v134==(3 -0)) then local v371=0;local v372;local v373;while true do if (v371==0) then v372=0;v373=nil;v371=3 -2 ;end if (v371==1) then while true do if (v372==0) then v373=0;while true do if (v373==(0 + 0)) then v136[3]=v33() -(2^16) ;v136[110 -(69 + 37) ]=v32();break;end end break;end end break;end end end v138=1;end if (v138==(1 -0)) then v133=4 -2 ;break;end end end if (0==v133) then local v139=0;while true do if (v139~=1) then else v133=1;break;end if (0==v139) then v134=v30(v121,2,4 -1 );v135=v30(v121,4,1656 -(1123 + 527) );v139=2 -1 ;end end end if (v133==3) then if (v30(v135,6 -3 ,3)==1) then v136[9 -5 ]=v66[v136[1670 -(1037 + 629) ]];end v61[v118]=v136;break;end end end break;end end break;end if (v119==0) then local v128=0 -0 ;while true do if (v128==(0 + 0)) then v120=0 -0 ;v121=nil;v128=1;end if (1~=v128) then else v119=1 -0 ;break;end end end end end for v122=1719 -(775 + 943) ,v33() do v62[v122-1 ]=v38();end for v124=1,v33() do v63[v124]=v33();end return v64;end end break;end end break;end if (v58==2) then v63=nil;v64=nil;v58=12 -9 ;end if (v58==0) then v59=0 + 0 ;v60=nil;v58=1;end end end;v27=5;end if (v27==3) then v34=function()local v67=v33();local v68=v33();local v69=1388 -(1132 + 255) ;local v70=(v30(v68,1,11 + 9 ) * ((1 + 1)^(32 + 0))) + v67 ;local v71=v30(v68,21,1 + 30 );local v72=((v30(v68,32)==((604 -(555 + 48)) + (0 -0))) and  -(1 + 0)) or (752 -(229 + 522)) ;if (v71==(0 + 0 + 0)) then if (v70==(0 + 0)) then return v72 * (1692 -(650 + 1042)) ;else local v92=0 -(0 -0) ;while true do if (v92==(1618 -(1294 + 324))) then v71=3 -2 ;v69=0 -0 ;break;end end end elseif (v71==(3830 -(344 + 1439))) then return ((v70==((1176 + 508) -(142 + 1542))) and (v72 * ((1 -0)/0))) or (v72 * NaN) ;end return v9(v72,v71-1023 ) * (v69 + (v70/(2^(85 -33)))) ;end;v35=nil;v35=function(v44)local v73;if  not v44 then v44=v33();if (v44==0) then return "";end end v73=v4(v22,v28,(v28 + v44) -(1 -0) );v28=v28 + v44 ;local v74={};for v76=2 -1 , #v73 do v74[v76]=v3(v2(v4(v73,v76,v76)));end return v7(v74);end;v36=v33;v27=4;end if (v27==1) then v30=function(v45,v46,v47)if v47 then local v80=(v45/((3 -1)^(v46-1)))%((7 -5)^(((v47-1) -(v46-(70 -(53 + 16)))) + (1068 -(730 + 337)))) ;return v80-(v80%(1 + 0)) ;else local v81=(663 -((793 -316) + 184))^(v46-(1 + 0)) ;return (((v45%(v81 + v81))>=v81) and (1 -(0 + 0))) or (0 + 0) ;end end;v31=nil;v31=function()local v75=v2(v22,v28,v28);v28=v28 + 1 ;return v75;end;v32=nil;v27=2;end end end;vv10(),...);break;end if (v0==3) then v10=getfenv or function()return _ENV;end ;v11=setmetatable;v12=pcall;v0=4;end if (4==v0) then v13=select;v14=unpack or table.unpack ;v15=tonumber;v0=5;end if (v0==1) then v4=string.sub;v5=string.gsub;v6=string.rep;v0=2;end end end
